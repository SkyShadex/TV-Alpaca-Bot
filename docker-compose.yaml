version: '3.8'

volumes:
  redis-data:
  graphs:

services:    
  dashboard:
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
    env_file: vars.env
    ports:
      - "${LOCAL_PORT}:${LOCAL_PORT}"
    volumes:
      - .:/workspace:cached
      - graphs:/app/data/graphs
      - graphs:/app/static/data/graphs
    depends_on:
      redis:
        condition: service_healthy
    restart: on-failure:3

  strategy-manager:
    build:
      context: .
      dockerfile: ./StrategyManager/Dockerfile
    env_file: vars.env
    volumes:
      - .:/workspace:cached
      - graphs:/app/data/graphs
    depends_on:
      redis:
        condition: service_healthy
    restart: on-failure:3

  portfolio-manager:
    build:
      context: .
      dockerfile: ./PortfolioManager/Dockerfile
    env_file: vars.env
    expose:
      - "5000"
    volumes:
      - .:/workspace:cached
      - graphs:/app/data/graphs
    depends_on:
      redis:
        condition: service_healthy
    restart: on-failure:3

  risk-manager:
    build:
      context: .
      dockerfile: ./RiskManager/Dockerfile
    env_file: vars.env
    volumes:
      - .:/workspace:cached
      - graphs:/app/data/graphs
    depends_on:
      redis:
        condition: service_healthy
    restart: on-failure:3

  redis:
    image: redis/redis-stack:latest
    env_file: vars.env
    ports:
      - "8001:8001"
    expose:
      - "${DB_PORT}"
    hostname: "${DB_HOST}"
    volumes:
      - redis-data:/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
  

  # init-common:
  #   build:
  #     context: ./common
  #     dockerfile: Dockerfile
  #   volumes:
  #     - common:/workspace/common

        # init-common:
      #   condition: service_completed_successfully